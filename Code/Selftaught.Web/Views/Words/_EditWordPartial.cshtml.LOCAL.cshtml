@model Selftaught.Data.Models.Word

@using (@Html.BeginForm("Edit", "Words", FormMethod.Post, new { @class = "form form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()
    @Html.HiddenFor(m => m.Id)

    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Name)
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(m => m.Language, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.Language, (IEnumerable<SelectListItem>)ViewBag.LanguageId, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Language)
        </div>
    </div>*@

    @*<div class="form-group">
        @Html.LabelFor(m => m.PartOfSpeech, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(m => m.PartOfSpeech, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.PartOfSpeech)
        </div>
    </div>*@

    for (int i = 0; i < Model.Attributes.Count; i++)
    {
        <div class="form-group">
            <label class="control-label col-md-2" for="Attributes_@(i)__Value">@Model.Attributes[i].Name</label>
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Attributes[i].Value, new { @class = "form-control" })
                @Html.HiddenFor(m => m.Attributes[i].Name)
                @Html.ValidationMessageFor(m => m.Attributes[i].Value)
            </div>
        </div>
    }

    for (int i = 0; i < Model.Translations.Count; i++)
    {
        <div class="form-group">
            @Html.LabelFor(m => m.Translations[i].Meaning, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Translations[i].Meaning, new { @class = "form-control form-label" })
                @Html.ValidationMessageFor(m => m.Translations[i].Meaning)
            </div>
        </div>
    }

    @*for (int i = 0; i < 6 - Model.Translations.Count; i++)
    {
        <div class="form-group">
            @Html.LabelFor(m => m.Translations[i].Meaning, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control" type="text" name="Translations[@(6 - Model.Translations.Count - i)].Meaning" />
                @Html.ValidationMessageFor(m => m.Translations[i].Meaning)
            </div>
        </div>
    }*@

    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-default" />
    </div>
}

@using (Html.BeginForm("Delete", "Words", FormMethod.Post, new { @class = "form form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("id", Model.Id)
    
    <input type="submit" value="Delete" class="btn btn-danger" />
}